'use strict';(function(){const b={cache:!0};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/tech/cpudisorder/',title:"CPU乱序执行的证明",section:"TECH",content:"或许CPU性能会影响代码执行耗时和次数，可并不影响结果。\n嗯\u0026hellip;我的CPU：amd r9 5900HS。rog flow x13永远滴神！\npo代码 #  package demo.chaos; public class Disorder { private static int a, b, x, y; private static long start; public static void main(String[] args) throws InterruptedException { int i = 0; start = System.currentTimeMillis(); while (true) { i++; a = 0; b = 0; x = 0; y = 0; Thread X = new Thread(() -\u0026gt; { a = 1; x = b; }); Thread Y = new Thread(() -\u0026gt; { b = 1; y = a; }); X.start(); Y.start(); X.join(); Y.join(); String result = \u0026quot;takes \u0026quot; + i + \u0026quot; time when x=0 and y=0.\u0026quot;; if (x == 0 \u0026amp;\u0026amp; y == 0) { System.err.println(result); System.err.println(\u0026quot;cost: \u0026quot; + (System.currentTimeMillis() - start) + \u0026quot;ms\u0026quot;); break; } } } } 执行结果 #  takes 15744 time when x=0 and y=0. cost: 1976ms takes 847 time when x=0 and y=0. cost: 143ms takes 708712 time when x=0 and y=0. cost: 99281ms 乱序证明 #  我们假设若是不会出现乱序执行，那么x和y的组合就只有三种：\n1. x = 0; y = 1; 2. x = 1; y = 0; 3. x = 1; y = 1; 即x=0和y=0组合永远不可能存在。(中二点说，x和y绝对不会抵达同时为零的真实！\n也即程序死循环永远不会被终结。\n可执行结果出现了第四种可能。\n那么真相只有一个：假设被推翻。你品你细品。\n"}),a.add({id:1,href:'/tech/myknowledge/',title:"学习之路：知识体系构建及独家笔记整理",section:"TECH",content:"前言 #  这里使用的语言是Java，若哪里用到其他语言，自会另行说明。\n网络多线程 #   基础照例略过，概念相关需要各位同学面向搜索引擎自行理清。\n 网络相关概念 #  IP地址 域名和端口 网络协议 TCP和UDP Socket\nTCP字节流编程 #  虽说这部分内容比较基础也比较简单，但不经常使用就容易忘记。\n SocketServer   public static void main(String[] args) throws IOException { ServerSocket serverSocket = new ServerSocket(8888); System.out.println(\u0026quot;server-socket start listening...port 8888\u0026quot;); Socket socket = serverSocket.accept(); InputStream inputStream = socket.getInputStream(); byte[] buf = new byte[1024]; int len; while ((len = inputStream.read(buf)) != -1) { System.out.println(new String(buf, 0, len)); } OutputStream outputStream = socket.getOutputStream(); outputStream.write(\u0026quot;yo,jojo\u0026quot;.getBytes(StandardCharsets.UTF_8)); socket.shutdownOutput(); // important outputStream.close(); inputStream.close(); socket.close(); serverSocket.close(); }  SocketClient   public static void main(String[] args) throws IOException { InetAddress localHost = InetAddress.getLocalHost(); System.out.println(\u0026quot;localhost: \u0026quot; + localHost); Socket socket = new Socket(localHost, 8888); OutputStream outputStream = socket.getOutputStream(); outputStream.write(\u0026quot;dio!!!\u0026quot;.getBytes(StandardCharsets.UTF_8)); socket.shutdownOutput(); InputStream inputStream = socket.getInputStream(); byte[] buf = new byte[1024]; int len; while ((len = inputStream.read(buf)) != -1) { System.out.println(new String(buf, 0, len)); } inputStream.close(); outputStream.close(); socket.close(); } TCP字符流编程 #  说什么字节流字符流，其实挺绕的，直接上代码吧。\n public static void main(String[] args) throws IOException { ServerSocket serverSocket = new ServerSocket(8888); System.out.println(\u0026quot;server-socket start listening...port 8888\u0026quot;); Socket socket = serverSocket.accept(); InputStream inputStream = socket.getInputStream(); BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream)); System.out.println(bufferedReader.readLine()); OutputStream outputStream = socket.getOutputStream(); BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream)); bufferedWriter.write(\u0026quot;yo,jojo\u0026quot;); bufferedWriter.newLine(); // important bufferedWriter.flush(); // important bufferedWriter.close(); bufferedReader.close(); socket.close(); serverSocket.close(); }  SocketServer   public static void main(String[] args) throws IOException { InetAddress localHost = InetAddress.getLocalHost(); System.out.println(\u0026quot;localhost: \u0026quot; + localHost); Socket socket = new Socket(localHost, 8888); OutputStream outputStream = socket.getOutputStream(); BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream)); bufferedWriter.write(\u0026quot;dio!!!\u0026quot;); bufferedWriter.newLine(); // 插入换行符，以示写入内容结束 bufferedWriter.flush(); InputStream inputStream = socket.getInputStream(); BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream)); System.out.println(bufferedReader.readLine()); bufferedReader.close(); bufferedWriter.close(); socket.close(); } 网络文件传输 #   SocketClient  知识体系构建、梳理的最佳选择，肯定毋庸置疑是写思维导图。\n再者其次是markdown。\n不过使用md进行笔记整理、心得记录却又是极好的。故才有了你现在见到的页面。\n但这不是二选一的问题，想要xmind导图的同学，可到github私我。\n"}),a.add({id:2,href:'/tech/mmworry/',title:"每当我解决一个bug，i++=妈妈对我发量的担忧",section:"TECH",content:"标题不搞个UPPER_CASE彷佛不能显示出雨果的官威。\n 狂 #  我赌你没见过哪个框架，敢在他们官网首页正中，写下这样一句话？\nThe world’s fastest framework for building websites\n跑得比记者还快 #   假定你是python的环境，那么pip install hugo雨果你就安装好了。\n hugo new site name没有前戏环境直接搭建完毕。name即目录名。\nCongratulations! Your new Hugo site is created in D:\\lamzed. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026quot;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026quot; command. 2. Perhaps you want to add some content. You can add single files with \u0026quot;hugo new \u0026lt;SECTIONNAME\u0026gt;\\\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026quot;. 3. Start the built-in live server via \u0026quot;hugo server\u0026quot;. Visit https://gohugo.io/ for quickstart guide and full documentation. 到官网找个你心水的theme，扒拉下来，丢到对应目录，\n敲下hugo new blog01.md，然后vim进去一顿输出，\n接着hugo server啪的一下网站就推出去了。很快啊。\n星剖 #  雨果提供了许多不错的主题，simple星剖就是让你不动脑筋。\nlamzed's page使用的就是他们的一个叫book的极简风格theme。\n但要是套个前端组件，或者稍微客制化下，你的站点可能会酷炫许多。\n抛瓦 #  简单却power抛瓦，或者dio。就说部署这点，简直无敌。\n部署速度 #  它的部署速度贼™快，总能让我high到不行。\n就是我的指头敲击回车的一刹那，甚至行程都还没走完——\n还来不及听到那令人愉悦的段落声响，我眼前的终端就已经执行完了全部命令：\n黑乎乎的窗口显示简单的数字和字母，\n13ms，这四个字符组合起来，真让我着迷。\n热部署 #  平平无奇的卖点，只是千不该万不该让上一秒还在用tomcat汤姆猫的我\n下一秒和hugo雨果相遇。\nchange detected, rebuilding site.\n也就total in 3ms而已。\n响应式 #  ：嗯，对于博客站点来说，这玩意确实挺香的。\n课代表发言了 #  总的来说，雨果的抛瓦包含以下三点。\n1. 部署快，它让开发编程的爽了 2. 热部署，它让写稿搬砖的爽了 3. 响应式，它让围观白嫖的爽了 课代表站起来了 #  快速，\n简单，\n强力，\n他说，hugo极其适合静态页面快速搭建，嗯博客也可。\n安利完结撒花 #  这是我 lamzed的奇妙页面写的第一篇blog，也没技术含量，充其量是个随笔吐槽。\n可能对于架构师以上级别的牛人来说，雨果充其量只是个类似小孩玩具的东西。可但是——\n我是菜鸡。不是\n既然我选择了雨果搭建自己的博客，那我肯定要稍微吹一下它啊。吹爆！\n 2021.2.13 改，删了废话。这个日期，新年哟~\n 彩蛋福利 #  或者，你也可以直接阅读 Getting Started with Hugo和 Creating a New Theme这两份文档。\n不带翻译的绝好阅读材料！wink~\n"}),a.add({id:3,href:'/tech/skillset/',title:"论码农的自我修养——骇人听闻的技术栈",section:"TECH",content:"标题不搞个UPPER_CASE彷佛不能显示出雨果的官威。\n 狂 #  我赌你没见过哪个框架，敢在他们官网首页正中，写下这样一句话？\nThe world’s fastest framework for building websites\n跑得比记者还快 #   假定你是python的环境，那么pip install hugo雨果你就安装好了。\n hugo new site name没有前戏环境直接搭建完毕。name即目录名。\nCongratulations! Your new Hugo site is created in D:\\lamzed. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026quot;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026quot; command. 2. Perhaps you want to add some content. You can add single files with \u0026quot;hugo new \u0026lt;SECTIONNAME\u0026gt;\\\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026quot;. 3. Start the built-in live server via \u0026quot;hugo server\u0026quot;. Visit https://gohugo.io/ for quickstart guide and full documentation. 到官网找个你心水的theme，扒拉下来，丢到对应目录，\n敲下hugo new blog01.md，然后vim进去一顿输出，\n接着hugo server啪的一下网站就推出去了。很快啊。\n星剖 #  雨果提供了许多不错的主题，simple星剖就是让你不动脑筋。\nlamzed's page使用的就是他们的一个叫book的极简风格theme。\n但要是套个前端组件，或者稍微客制化下，你的站点可能会酷炫许多。\n抛瓦 #  简单却power抛瓦，或者dio。就说部署这点，简直无敌。\n部署速度 #  它的部署速度贼™快，总能让我high到不行。\n就是我的指头敲击回车的一刹那，甚至行程都还没走完——\n还来不及听到那令人愉悦的段落声响，我眼前的终端就已经执行完了全部命令：\n黑乎乎的窗口显示简单的数字和字母，\n13ms，这四个字符组合起来，真让我着迷。\n热部署 #  平平无奇的卖点，只是千不该万不该让上一秒还在用tomcat汤姆猫的我\n下一秒和hugo雨果相遇。\nchange detected, rebuilding site.\n也就total in 3ms而已。\n响应式 #  ：嗯，对于博客站点来说，这玩意确实挺香的。\n课代表发言了 #  总的来说，雨果的抛瓦包含以下三点。\n1. 部署快，它让开发编程的爽了 2. 热部署，它让写稿搬砖的爽了 3. 响应式，它让围观白嫖的爽了 课代表站起来了 #  快速，\n简单，\n强力，\n他说，hugo极其适合静态页面快速搭建，嗯博客也可。\n安利完结撒花 #  这是我 lamzed的奇妙页面写的第一篇blog，也没技术含量，充其量是个随笔吐槽。\n可能对于架构师以上级别的牛人来说，雨果充其量只是个类似小孩玩具的东西。可但是——\n我是菜鸡。不是\n既然我选择了雨果搭建自己的博客，那我肯定要稍微吹一下它啊。吹爆！\n 2021.2.13 改，删了废话。这个日期，新年哟~\n 彩蛋福利 #  或者，你也可以直接阅读 Getting Started with Hugo和 Creating a New Theme这两份文档。\n不带翻译的绝好阅读材料！wink~\n"}),a.add({id:4,href:'/tech/pycrawler/',title:"我爬我自己",section:"TECH",content:"或许该文不具备实操价值，但思路思想永垂不朽。\n不搞个UPPER_CASE彷佛不能显示出雨果的官威。\n 狂 #  我赌你没见过哪个框架，敢在他们官网首页正中，写下这样一句话？\nThe world’s fastest framework for building websites\n跑得比记者还快 #   假定你是python的环境，那么pip install hugo雨果你就安装好了。\n hugo new site name没有前戏环境直接搭建完毕。name即目录名。\nCongratulations! Your new Hugo site is created in D:\\lamzed. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026quot;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026quot; command. 2. Perhaps you want to add some content. You can add single files with \u0026quot;hugo new \u0026lt;SECTIONNAME\u0026gt;\\\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026quot;. 3. Start the built-in live server via \u0026quot;hugo server\u0026quot;. Visit https://gohugo.io/ for quickstart guide and full documentation. 到官网找个你心水的theme，扒拉下来，丢到对应目录，\n敲下hugo new blog01.md，然后vim进去一顿输出，\n接着hugo server啪的一下网站就推出去了。很快啊。\n星剖 #  雨果提供了许多不错的主题，simple星剖就是让你不动脑筋。\nlamzed's page使用的就是他们的一个叫book的极简风格theme。\n但要是套个前端组件，或者稍微客制化下，你的站点可能会酷炫许多。\n抛瓦 #  简单却power抛瓦，或者dio。就说部署这点，简直无敌。\n部署速度 #  它的部署速度贼™快，总能让我high到不行。\n就是我的指头敲击回车的一刹那，甚至行程都还没走完——\n还来不及听到那令人愉悦的段落声响，我眼前的终端就已经执行完了全部命令：\n黑乎乎的窗口显示简单的数字和字母，\n13ms，这四个字符组合起来，真让我着迷。\n热部署 #  平平无奇的卖点，只是千不该万不该让上一秒还在用tomcat汤姆猫的我\n下一秒和hugo雨果相遇。\nchange detected, rebuilding site.\n也就total in 3ms而已。\n响应式 #  ：嗯，对于博客站点来说，这玩意确实挺香的。\n课代表发言了 #  总的来说，雨果的抛瓦包含以下三点。\n1. 部署快，它让开发编程的爽了 2. 热部署，它让写稿搬砖的爽了 3. 响应式，它让围观白嫖的爽了 课代表站起来了 #  快速，\n简单，\n强力，\n他说，hugo极其适合静态页面快速搭建，嗯博客也可。\n安利完结撒花 #  这是我 lamzed的奇妙页面写的第一篇blog，也没技术含量，充其量是个随笔吐槽。\n可能对于架构师以上级别的牛人来说，雨果充其量只是个类似小孩玩具的东西。可但是——\n我是菜鸡。不是\n既然我选择了雨果搭建自己的博客，那我肯定要稍微吹一下它啊。吹爆！\n 2021.2.13 改，删了废话。这个日期，新年哟~\n 彩蛋福利 #  或者，你也可以直接阅读 Getting Started with Hugo和 Creating a New Theme这两份文档。\n不带翻译的绝好阅读材料！wink~\n"}),a.add({id:5,href:'/tech/specialskill/',title:"那些年我背过的JAVA面试题，及奇技淫巧",section:"TECH",content:"咀嚼反刍，温故而知新。 内容涵盖：JavaEE、数据库和框架。\n主菜速览：\n1.JavaSE基础 2.JDK新特性相关 3.JVM相关 4.JavaWeb相关 5.微服务相关 .数据库：MySQL、MongoDB和Redis 前言 #    抛砖引玉 #    基础内容我只会三言两语一笔带过，不会做过多补充。\n甚至只抛出问题没有答案。\n相对较难的问题我整理了些相关的详细答案，再深入的话则没有。\n  吾非圣贤 #    要是遇到题目出现错误缺漏的情况，你可以通过邮箱联系我。\n也可以通过这个邮箱向我索要x-mind思维导图。\n JavaSE基础——基础不牢地动山摇 #  你对面向对象的理解，面向对象比面向过程好在哪？ #  继承和多态提高了代码的复用性，但性能比面向过程要低。 什么是多态，用什么方式去实现这个概念？ #  同一事物不同状态。通过implements interface或者extends @Override实现。 接口和抽象类的区别 #  接口成员变量默认为public static final，必须赋初值； 方法则是方法都是public、abstract。 什么是抽象类，什么情况下会用到抽象类？ #   什么情况下会用到final？ #   final、finally、finalize区别 #  final是关键字 finally配合try/catch使用 finalize #  我赌你没见过哪个框架，敢在他们官网首页正中，写下这样一句话？\nThe world’s fastest framework for building websites\n跑得比记者还快 #   假定你是python的环境，那么pip install hugo雨果你就安装好了。\n hugo new site name没有前戏环境直接搭建完毕。name即目录名。\nCongratulations! Your new Hugo site is created in D:\\lamzed. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026quot;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026quot; command. 2. Perhaps you want to add some content. You can add single files with \u0026quot;hugo new \u0026lt;SECTIONNAME\u0026gt;\\\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026quot;. 3. Start the built-in live server via \u0026quot;hugo server\u0026quot;. Visit https://gohugo.io/ for quickstart guide and full documentation. 到官网找个你心水的theme，扒拉下来，丢到对应目录，\n敲下hugo new blog01.md，然后vim进去一顿输出，\n接着hugo server啪的一下网站就推出去了。很快啊。\n星剖 #  雨果提供了许多不错的主题，simple星剖就是让你不动脑筋。\nlamzed's page使用的就是他们的一个叫book的极简风格theme。\n但要是套个前端组件，或者稍微客制化下，你的站点可能会酷炫许多。\n抛瓦 #  简单却power抛瓦，或者dio。就说部署这点，简直无敌。\n部署速度 #  它的部署速度贼™快，总能让我high到不行。\n就是我的指头敲击回车的一刹那，甚至行程都还没走完——\n还来不及听到那令人愉悦的段落声响，我眼前的终端就已经执行完了全部命令：\n黑乎乎的窗口显示简单的数字和字母，\n13ms，这四个字符组合起来，真让我着迷。\n热部署 #  平平无奇的卖点，只是千不该万不该让上一秒还在用tomcat汤姆猫的我\n下一秒和hugo雨果相遇。\nchange detected, rebuilding site.\n也就total in 3ms而已。\n响应式 #  ：嗯，对于博客站点来说，这玩意确实挺香的。\n课代表发言了 #  总的来说，雨果的抛瓦包含以下三点。\n1. 部署快，它让开发编程的爽了 2. 热部署，它让写稿搬砖的爽了 3. 响应式，它让围观白嫖的爽了 课代表站起来了 #  快速，\n简单，\n强力，\n他说，hugo极其适合静态页面快速搭建，嗯博客也可。\n安利完结撒花 #  这是我 lamzed的奇妙页面写的第一篇blog，也没技术含量，充其量是个随笔吐槽。\n可能对于架构师以上级别的牛人来说，雨果充其量只是个类似小孩玩具的东西。可但是——\n我是菜鸡。不是\n既然我选择了雨果搭建自己的博客，那我肯定要稍微吹一下它啊。吹爆！\n 2021.2.13 改，删了废话。这个日期，新年哟~\n 奇技淫巧 #  面试官心理 #  或者，你也可以直接阅读 Getting Started with Hugo和 Creating a New Theme这两份文档。\n不带翻译的绝好阅读材料！wink~\n"}),a.add({id:6,href:'/tech/hugonice/',title:"静态页面快速搭建神器HUGO",section:"TECH",content:"标题不搞个UPPER_CASE彷佛不能显示出雨果的官威。\n 狂 #  我赌你没见过哪个框架，敢在他们官网首页正中，写下这样一句话？\nThe world’s fastest framework for building websites\n跑得比记者还快 #   假定你是python的环境，那么pip install hugo雨果你就安装好了。\n hugo new site name没有前戏环境直接搭建完毕。name即目录名。\nCongratulations! Your new Hugo site is created in D:\\lamzed. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026quot;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026quot; command. 2. Perhaps you want to add some content. You can add single files with \u0026quot;hugo new \u0026lt;SECTIONNAME\u0026gt;\\\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026quot;. 3. Start the built-in live server via \u0026quot;hugo server\u0026quot;. Visit https://gohugo.io/ for quickstart guide and full documentation. 到官网找个你心水的theme，扒拉下来，丢到对应目录，\n敲下hugo new blog01.md，然后vim进去一顿输出，\n接着hugo server啪的一下网站就推出去了。很快啊。\n星剖 #  雨果提供了许多不错的主题，simple星剖就是让你不动脑筋。\nlamzed's page使用的就是他们的一个叫book的极简风格theme。\n但要是套个前端组件，或者稍微客制化下，你的站点可能会酷炫许多。\n抛瓦 #  简单却power抛瓦，或者dio。就说部署这点，简直无敌。\n部署速度 #  它的部署速度贼™快，总能让我high到不行。\n就是我的指头敲击回车的一刹那，甚至行程都还没走完——\n还来不及听到那令人愉悦的段落声响，我眼前的终端就已经执行完了全部命令：\n黑乎乎的窗口显示简单的数字和字母，\n13ms，这四个字符组合起来，真让我着迷。\n热部署 #  平平无奇的卖点，只是千不该万不该让上一秒还在用tomcat汤姆猫的我\n下一秒和hugo雨果相遇。\nchange detected, rebuilding site.\n也就total in 3ms而已。\n响应式 #  ：嗯，对于博客站点来说，这玩意确实挺香的。\n课代表发言了 #  总的来说，雨果的抛瓦包含以下三点。\n1. 部署快，它让开发编程的爽了 2. 热部署，它让写稿搬砖的爽了 3. 响应式，它让围观白嫖的爽了 课代表站起来了 #  快速，\n简单，\n强力，\n他说，hugo极其适合静态页面快速搭建，嗯博客也可。\n安利完结撒花 #  这是我 lamzed的奇妙页面写的第一篇blog，也没技术含量，充其量是个随笔吐槽。\n可能对于架构师以上级别的牛人来说，雨果充其量只是个类似小孩玩具的东西。可但是——\n我是菜鸡。不是\n既然我选择了雨果搭建自己的博客，那我肯定要稍微吹一下它啊。吹爆！\n 2021.2.13 改，删了废话。这个日期，新年哟~\n 彩蛋福利 #  或者，你也可以直接阅读 Getting Started with Hugo和 Creating a New Theme这两份文档。\n不带翻译的绝好阅读材料！wink~\n"}),a.add({id:7,href:'/tech/projectexp/',title:"我做过的最引以为豪的一个项目",section:"TECH",content:"项目概览 #  LAMZED博客 #  正是你现在正在浏览的博客。持续时间最长也是最引以为豪的项目，参与全过程负责全模块。\n尽管使用的技术比较简单，但我也只是个菜鸡呀。\n标题不搞个UPPER_CASE彷佛不能显示出雨果的官威。\n 狂 #  我赌你没见过哪个框架，敢在他们官网首页正中，写下这样一句话？\nThe world’s fastest framework for building websites\n跑得比记者还快 #   假定你是python的环境，那么pip install hugo雨果你就安装好了。\n hugo new site name没有前戏环境直接搭建完毕。name即目录名。\nCongratulations! Your new Hugo site is created in D:\\lamzed. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026quot;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026quot; command. 2. Perhaps you want to add some content. You can add single files with \u0026quot;hugo new \u0026lt;SECTIONNAME\u0026gt;\\\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026quot;. 3. Start the built-in live server via \u0026quot;hugo server\u0026quot;. Visit https://gohugo.io/ for quickstart guide and full documentation. 到官网找个你心水的theme，扒拉下来，丢到对应目录，\n敲下hugo new blog01.md，然后vim进去一顿输出，\n接着hugo server啪的一下网站就推出去了。很快啊。\n星剖 #  雨果提供了许多不错的主题，simple星剖就是让你不动脑筋。\nlamzed's page使用的就是他们的一个叫book的极简风格theme。\n但要是套个前端组件，或者稍微客制化下，你的站点可能会酷炫许多。\n抛瓦 #  简单却power抛瓦，或者dio。就说部署这点，简直无敌。\n部署速度 #  它的部署速度贼™快，总能让我high到不行。\n就是我的指头敲击回车的一刹那，甚至行程都还没走完——\n还来不及听到那令人愉悦的段落声响，我眼前的终端就已经执行完了全部命令：\n黑乎乎的窗口显示简单的数字和字母，\n13ms，这四个字符组合起来，真让我着迷。\n热部署 #  平平无奇的卖点，只是千不该万不该让上一秒还在用tomcat汤姆猫的我\n下一秒和hugo雨果相遇。\nchange detected, rebuilding site.\n也就total in 3ms而已。\n响应式 #  ：嗯，对于博客站点来说，这玩意确实挺香的。\n课代表发言了 #  总的来说，雨果的抛瓦包含以下三点。\n1. 部署快，它让开发编程的爽了 2. 热部署，它让写稿搬砖的爽了 3. 响应式，它让围观白嫖的爽了 课代表站起来了 #  快速，\n简单，\n强力，\n他说，hugo极其适合静态页面快速搭建，嗯博客也可。\n安利完结撒花 #  这是我 lamzed的奇妙页面写的第一篇blog，也没技术含量，充其量是个随笔吐槽。\n可能对于架构师以上级别的牛人来说，雨果充其量只是个类似小孩玩具的东西。可但是——\n我是菜鸡。不是\n既然我选择了雨果搭建自己的博客，那我肯定要稍微吹一下它啊。吹爆！\n 2021.2.13 改，删了废话。这个日期，新年哟~\n 彩蛋福利 #  或者，你也可以直接阅读 Getting Started with Hugo和 Creating a New Theme这两份文档。\n不带翻译的绝好阅读材料！wink~\n"})})()